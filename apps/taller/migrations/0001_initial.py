# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-23 17:06
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client', '0001_initial'),
        ('core', '0001_initial'),
        ('employee', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CheckList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('destination', models.CharField(blank=True, max_length=200, null=True)),
                ('number_billing', models.CharField(blank=True, max_length=45, null=True)),
                ('number_contract', models.CharField(blank=True, max_length=45, null=True)),
                ('status_checklist', models.CharField(blank=True, choices=[('PEND', 'Pendiente'), ('PROCESS', 'En Proceso'), ('FIN', 'Finalizado')], default='PEND', max_length=10, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_checklist_client', to='client.Person')),
                ('subsidiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_checklist_subsidiary', to='core.Subsidiary')),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CheckListDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('type_checklist', models.CharField(blank=True, choices=[('ENTRY', 'Entry'), ('DEPT', 'Departure')], max_length=10, null=True)),
                ('taxi_driver', models.CharField(blank=True, max_length=200, null=True)),
                ('date_initial', models.DateTimeField(blank=True, null=True)),
                ('hour_initial', models.TimeField(blank=True, null=True)),
                ('fuel_initial', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('km_initial', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=14, null=True)),
                ('kms_next_maintenance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=14, null=True)),
                ('observation', models.TextField(blank=True, null=True)),
                ('checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_checklistdetail_checklist', to='taller.CheckList')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InventoryCheckList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('checklist_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_inventorychecklist_checklist_detail', to='taller.CheckListDetail')),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Labour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('cost_price', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('sale_price', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='LabourCheckList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('checklist_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_labourchecklist_checklist_detail', to='taller.CheckListDetail')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_labourchecklist_employee', to='employee.Employee')),
                ('labour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_labourchecklist_labour', to='taller.Labour')),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PhotoCheckList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('photo_checklist', models.FileField(blank=True, null=True, upload_to='photo_checklist/%Y-%m-%d/')),
                ('checklist_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_photochecklist_checklist_detail', to='taller.CheckListDetail')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('igv_tax', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('sub_total', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('total_paid', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('current_date', models.DateField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_quotation_person', to='client.Person')),
                ('exchange_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taller_quotation_exchange_rate', to='core.ExchangeRate')),
                ('labour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_quotation_labour', to='taller.Labour')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='QuotationDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('amount_price', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('quotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_quotationdetail_quotation', to='taller.Quotation')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('current_date', models.DateTimeField(blank=True, null=True)),
                ('observation', models.TextField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_report_client', to='client.Person')),
                ('subsidiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_report_subsidiary', to='core.Subsidiary')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ReportDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('file_image', models.FileField(blank=True, null=True, upload_to='report/%Y-%m-%d/')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_reportdocument_report', to='taller.Report')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCheckList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SolicitudeCheckList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TransportInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TypeCheckList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('service_checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_typechecklist_type_service_checklist', to='taller.ServiceCheckList')),
                ('solicitude_checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_typechecklist_solicitude_checklist', to='taller.SolicitudeCheckList')),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TypeFuel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TypeLabour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TypeTransport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date created')),
                ('date_modified', models.DateTimeField(auto_now=True, null=True, verbose_name='date modified')),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('plaque', models.CharField(blank=True, max_length=200, null=True)),
                ('model', models.CharField(blank=True, max_length=200, null=True)),
                ('year_car', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('vin', models.CharField(blank=True, max_length=100, null=True)),
                ('color', models.CharField(blank=True, max_length=200, null=True)),
                ('serie_motor', models.CharField(blank=True, max_length=200, null=True)),
                ('soat', models.CharField(blank=True, max_length=100, null=True)),
                ('expiration_soat', models.DateTimeField(blank=True, null=True)),
                ('poliza', models.CharField(blank=True, max_length=100, null=True)),
                ('expiration_poliza', models.DateTimeField(blank=True, null=True)),
                ('technical_review', models.CharField(blank=True, max_length=100, null=True)),
                ('expiration_technical_review', models.DateTimeField(blank=True, null=True)),
                ('opacity_test', models.CharField(blank=True, max_length=100, null=True)),
                ('expiration_opacity_test', models.DateTimeField(blank=True, null=True)),
                ('farenet_test', models.CharField(blank=True, max_length=100, null=True)),
                ('expiration_farenet_test', models.DateTimeField(blank=True, null=True)),
                ('is_flotilla', models.BooleanField(default=False)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_vehicle_brand', to='taller.Brand')),
                ('subsidiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_vehicle_subsidiary', to='core.Subsidiary')),
                ('type_transport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_vehicle_type_transport', to='taller.TypeTransport')),
            ],
            managers=[
                ('current', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='typetransport',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='typelabour',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='typefuel',
            unique_together=set([('name',)]),
        ),
        migrations.AddField(
            model_name='typechecklist',
            name='type_transport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_typechecklist_type_transport', to='taller.TypeTransport'),
        ),
        migrations.AlterUniqueTogether(
            name='solicitudechecklist',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='servicechecklist',
            unique_together=set([('name',)]),
        ),
        migrations.AddField(
            model_name='report',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_report_vehicle', to='taller.Vehicle'),
        ),
        migrations.AddField(
            model_name='quotation',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_quotation_vehicle', to='taller.Vehicle'),
        ),
        migrations.AddField(
            model_name='labour',
            name='type_labour',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_labour_type_labour', to='taller.TypeLabour'),
        ),
        migrations.AddField(
            model_name='inventorychecklist',
            name='inventory_checklist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_inventorychecklist_type_inventory_checklist', to='taller.TransportInventory'),
        ),
        migrations.AddField(
            model_name='checklistdetail',
            name='service_checklist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_checklistdetail_service_checklist', to='taller.ServiceCheckList'),
        ),
        migrations.AddField(
            model_name='checklistdetail',
            name='type_transport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_checklistdetail_type_transport', to='taller.TypeTransport'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taller_checklist_vehicle', to='taller.Vehicle'),
        ),
        migrations.AlterUniqueTogether(
            name='brand',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='vehicle',
            unique_together=set([('subsidiary', 'plaque')]),
        ),
        migrations.AlterUniqueTogether(
            name='typechecklist',
            unique_together=set([('service_checklist', 'type_transport', 'solicitude_checklist')]),
        ),
        migrations.AlterUniqueTogether(
            name='labourchecklist',
            unique_together=set([('checklist_detail', 'labour', 'employee')]),
        ),
        migrations.AlterUniqueTogether(
            name='labour',
            unique_together=set([('type_labour', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='inventorychecklist',
            unique_together=set([('checklist_detail', 'inventory_checklist')]),
        ),
        migrations.AlterUniqueTogether(
            name='checklist',
            unique_together=set([('number_billing', 'subsidiary')]),
        ),
    ]
